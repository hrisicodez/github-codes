import pygame
import sys
import random

# Initialize pygame
pygame.init()

# Constants
WIDTH = 800
HEIGHT = 600
FPS = 60
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Set up the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Car Racing Game")

# Load images
car_img = pygame.image.load('C:\\Users\\HRISIKESH PAN\\Desktop\\car1.png')
car_img = pygame.transform.scale(car_img, (100, 100))
car_rect = car_img.get_rect()
car_rect.centerx = WIDTH // 2
car_rect.bottom = HEIGHT - 10

# Variables
car_speed = 5
obstacle_speed = 5
obstacle_width = 100
obstacle_height = 100
obstacle_color = RED
obstacle_gap = 150
score = 0
font = pygame.font.Font(None, 36)

obstacles = []

def draw_text(text, font, color, surface, x, y):
    textobj = font.render(text, 1, color)
    textrect = textobj.get_rect()
    textrect.topleft = (x, y)
    surface.blit(textobj, textrect)

def generate_obstacles():
    while len(obstacles) < 3:
        obstacle_x = random.randrange(0, WIDTH - obstacle_width)
        obstacle_y = -random.randrange(obstacle_height * 2, obstacle_height * 3)
        obstacles.append(pygame.Rect(obstacle_x, obstacle_y, obstacle_width, obstacle_height))

def move_obstacles():
    global score
    for obstacle in obstacles:
        obstacle.y += obstacle_speed
        if obstacle.y > HEIGHT:
            obstacles.remove(obstacle)
            score += 1

def draw_obstacles():
    for obstacle in obstacles:
        pygame.draw.rect(screen, obstacle_color, obstacle)

def check_collision():
    for obstacle in obstacles:
        if car_rect.colliderect(obstacle):
            return True
    return False

# Game loop
running = True
clock = pygame.time.Clock()

while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # User input
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and car_rect.left > 0:
        car_rect.x -= car_speed
    if keys[pygame.K_RIGHT] and car_rect.right < WIDTH:
        car_rect.x += car_speed

    # Generate obstacles
    if len(obstacles) < 3:
        generate_obstacles()

    # Move obstacles
    move_obstacles()

    # Check collision
    if check_collision():
        running = False

    # Draw everything
    screen.fill(BLACK)
    draw_obstacles()
    screen.blit(car_img, car_rect)
    draw_text(f"Score: {score}", font, WHITE, screen, 10, 10)

    # Update display
    pygame.display.flip()

    # Cap the frame rate
    clock.tick(FPS)

pygame.quit()
sys.exit()
